From 3502e16cd5a1b6b3dcdd6c656432dffbe44d1140 Mon Sep 17 00:00:00 2001
From: Edward Hyunkoo Jee <edjee@google.com>
Date: Thu, 13 Dec 2018 16:23:53 -0800
Subject: [PATCH] Use specified Go compiler for cross compilation

---
 components/cli/scripts/build/.variables |  4 ++--
 components/cli/scripts/build/dynbinary  |  2 +-
 components/engine/hack/make.sh          |  4 ++--
 components/engine/hack/make/.binary     | 10 +++++-----
 components/engine/hack/make/.go-autogen |  4 ++--
 5 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/components/cli/scripts/build/.variables b/components/cli/scripts/build/.variables
index 208f44c316..991364ae46 100755
--- a/components/cli/scripts/build/.variables
+++ b/components/cli/scripts/build/.variables
@@ -20,7 +20,7 @@ export LDFLAGS="\
     ${LDFLAGS:-} \
 "
 
-GOOS="${GOOS:-$(go env GOHOSTOS)}"
-GOARCH="${GOARCH:-$(go env GOHOSTARCH)}"
+GOOS="${GOOS:-$(${GO} env GOHOSTOS)}"
+GOARCH="${GOARCH:-$(${GO} env GOHOSTARCH)}"
 export TARGET="build/docker-$GOOS-$GOARCH"
 export SOURCE="github.com/docker/cli/cmd/docker"
diff --git a/components/cli/scripts/build/dynbinary b/components/cli/scripts/build/dynbinary
index 4feb7e71d8..d35cadc547 100755
--- a/components/cli/scripts/build/dynbinary
+++ b/components/cli/scripts/build/dynbinary
@@ -9,6 +9,6 @@ source ./scripts/build/.variables
 
 echo "Building dynamically linked $TARGET"
 export CGO_ENABLED=1
-go build -o "${TARGET}" -tags pkcs11 --ldflags "${LDFLAGS}" -buildmode=pie "${SOURCE}"
+${GO} build -o "${TARGET}" -tags pkcs11 --ldflags "${LDFLAGS}" -buildmode=pie "${SOURCE}"
 
 ln -sf "$(basename "${TARGET}")" build/docker
diff --git a/components/engine/hack/make.sh b/components/engine/hack/make.sh
index 2f4ece3cdb..d1e7cf2ed3 100755
--- a/components/engine/hack/make.sh
+++ b/components/engine/hack/make.sh
@@ -31,7 +31,7 @@ export PKG_CONFIG=${PKG_CONFIG:-pkg-config}
 # We're a nice, sexy, little shell script, and people might try to run us;
 # but really, they shouldn't. We want to be in a container!
 inContainer="AssumeSoInitially"
-if [ "$(go env GOHOSTOS)" = 'windows' ]; then
+if [ "$(${GO} env GOHOSTOS)" = 'windows' ]; then
 	if [ -z "$FROM_DOCKERFILE" ]; then
 		unset inContainer
 	fi
@@ -197,7 +197,7 @@ main() {
 	mkdir -p bundles
 
 	# Windows and symlinks don't get along well
-	if [ "$(go env GOHOSTOS)" != 'windows' ]; then
+	if [ "$(${GO} env GOHOSTOS)" != 'windows' ]; then
 		rm -f bundles/latest
 		# preserve latest symlink for backward compatibility
 		ln -sf . bundles/latest
diff --git a/components/engine/hack/make/.binary b/components/engine/hack/make/.binary
index 010c2c11da..6c51cfbffa 100644
--- a/components/engine/hack/make/.binary
+++ b/components/engine/hack/make/.binary
@@ -3,7 +3,7 @@ set -e
 
 # a helper to provide ".exe" when it's appropriate
 binary_extension() {
-	if [ "$(go env GOOS)" = 'windows' ]; then
+	if [ "$(${GO} env GOOS)" = 'windows' ]; then
 		echo -n '.exe'
 	fi
 }
@@ -40,9 +40,9 @@ hash_files() {
 (
 export GOGC=${DOCKER_BUILD_GOGC:-1000}
 
-if [ "$(go env GOOS)/$(go env GOARCH)" != "$(go env GOHOSTOS)/$(go env GOHOSTARCH)" ]; then
+if [ "$(${GO} env GOOS)/$(${GO} env GOARCH)" != "$(${GO} env GOHOSTOS)/$(${GO} env GOHOSTARCH)" ]; then
 	# must be cross-compiling!
-	case "$(go env GOOS)/$(go env GOARCH)" in
+	case "$(${GO} env GOOS)/$(${GO} env GOARCH)" in
 		windows/amd64)
 			export CC=x86_64-w64-mingw32-gcc
 			export CGO_ENABLED=1
@@ -51,7 +51,7 @@ if [ "$(go env GOOS)/$(go env GOARCH)" != "$(go env GOHOSTOS)/$(go env GOHOSTARC
 fi
 
 # -buildmode=pie is not supported on Windows and Linux on mips.
-case "$(go env GOOS)/$(go env GOARCH)" in
+case "$(${GO} env GOOS)/$(${GO} env GOARCH)" in
 	windows/*|linux/mips*)
 		;;
 	*)
@@ -60,7 +60,7 @@ case "$(go env GOOS)/$(go env GOARCH)" in
 esac
 
 echo "Building: $DEST/$BINARY_FULLNAME"
-go build \
+${GO} build \
 	-o "$DEST/$BINARY_FULLNAME" \
 	"${BUILDFLAGS[@]}" \
 	-ldflags "
diff --git a/components/engine/hack/make/.go-autogen b/components/engine/hack/make/.go-autogen
index ea8a32ff5d..75212d3bd5 100644
--- a/components/engine/hack/make/.go-autogen
+++ b/components/engine/hack/make/.go-autogen
@@ -43,12 +43,12 @@ const (
 DVEOF
 
 # Compile the Windows resources into the sources
-if [ "$(go env GOOS)" = "windows" ]; then
+if [ "$(${GO} env GOOS)" = "windows" ]; then
 	mkdir -p autogen/winresources/tmp autogen/winresources/docker autogen/winresources/dockerd
 	cp hack/make/.resources-windows/resources.go autogen/winresources/docker/
 	cp hack/make/.resources-windows/resources.go autogen/winresources/dockerd/
 
-	if [ "$(go env GOHOSTOS)" == "windows" ]; then
+	if [ "$(${GO} env GOHOSTOS)" == "windows" ]; then
 		WINDRES=windres
 		WINDMC=windmc
 	else
-- 
2.20.0.405.gbc1bbc6f85-goog

