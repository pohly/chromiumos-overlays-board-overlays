# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "set up cgroups according to the platform (kevin) needs"
author          "chromium-os-dev@chromium.org"

start on stopped cgroups
task

script
  log() {
    logger -t "${UPSTART_JOB}" "failed to mount cgroup susbsystem $1"
  }

  mount_opts="noexec,nosuid,nodev"

  # Non-urgent Chrome threads should go to little cores.
  echo 0-3 > /sys/fs/cgroup/cpuset/chrome/non-urgent/cpus

  # we use a schedtune cgroup to boost the deadline sensitive tasks
  # but use a hack for now because schedtune doesn't support nested groups
  # Chrome is the only user right now, so we make a tmpfs directory
  # called "chrome" under schedtune and mount schedtune there
  # later when it supports nested groups, we'll mount at the right spot
  schedtune_dir="/sys/fs/cgroup/schedtune"
  mkdir -p "${schedtune_dir}/chrome/"

  mount -t cgroup cgroup "${schedtune_dir}/chrome" \
          -o schedtune,${mount_opts} || log "schedtune"

  mkdir "${schedtune_dir}/chrome/urgent"
  chown chronos:chronos "${schedtune_dir}/chrome/tasks"
  chown chronos:chronos "${schedtune_dir}/chrome/urgent/tasks"

  # default boost parameters needed for consistent 60fps compositing
  echo 20 > "${schedtune_dir}/chrome/urgent/schedtune.boost"
  echo 1 > "${schedtune_dir}/chrome/urgent/schedtune.prefer_idle"

  # enable touch boosting
  echo 75 > /sys/module/cpu_boost/parameters/input_boost_freq_percent

end script
